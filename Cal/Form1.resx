<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="backspaceButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>